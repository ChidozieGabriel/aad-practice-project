plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.chidozie.n.aadpracticeproject"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.chidozie.n.aadpracticeproject.ui.util.MyTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    kapt "androidx.room:room-compiler:2.2.5"
    kapt "com.github.bumptech.glide:compiler:4.9.0"

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.1"
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.paging:paging-runtime-ktx:2.1.2"
    implementation "androidx.room:room-ktx:2.2.5"
    implementation "androidx.room:room-runtime:2.2.5"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "com.github.bumptech.glide:glide:4.11.0"
    implementation "com.google.android.material:material:1.2.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.4.0"
    implementation "com.squareup.okhttp3:okhttp:4.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.7.0"
    implementation "com.squareup.retrofit2:retrofit:2.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    debugImplementation("androidx.fragment:fragment-testing:1.2.5") {
        exclude group: 'androidx.test', module: 'core'
    }

    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "androidx.room:room-testing:2.2.5"
    testImplementation "androidx.test.ext:junit:1.1.2"
    testImplementation "androidx.test:runner:1.3.0"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "junit:junit:4.13"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"
    testImplementation "org.objenesis:objenesis:2.6"
    testImplementation("io.mockk:mockk:1.9.3") { exclude module: "objenesis" }

    androidTestImplementation "androidx.activity:activity-ktx:1.1.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test:core-ktx:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "com.agoda.kakao:kakao:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"
    androidTestImplementation "org.objenesis:objenesis:2.6"
    androidTestImplementation("io.mockk:mockk-android:1.9.3") { exclude module: "objenesis" }

}

// print unit tests summary
// https://stackoverflow.com/a/36130467/9876676
tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
}
